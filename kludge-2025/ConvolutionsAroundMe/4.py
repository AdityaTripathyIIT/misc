
# The encoded array from the binary
local_a8 = [
    0x1a, 0x49, 0x19, 0x1f, 0x42, 0x67,
    0x43, 0x75, 0x58, 0x58, 0x75, 0x1b,
    0x43, 0x47, 0x1d, 0x53, 0x1f, 0x58,
    0x1f, 0x4e, 100,   0x1d, 0x5a, 0x19,
    0x19, 0x75, 0x51, 0x45, 0x19, 0x5e,
    0x75, 0x5c, 0x1b, 0x5e, 0x5e, 0x57
]

# Let's try with an XOR key. Common keys are 0x10, 0x20, 0x30, 0x42, 0x55, 0x7F, etc.
# We'll try 0x42 (since it's present in the array and often used), but you can brute-force if needed.

def try_xor_key(key):
    flag = ''.join(chr(x ^ key) for x in local_a8)
    print(f"Key {key:#x}: {flag}")

# Try a few likely keys:
for key in [0x10, 0x20, 0x30, 0x42, 0x55, 0x7F, 0x2a]:
    try_xor_key(key)

# If you find a string that looks like the flag, that's your answer!

